#!/usr/bin/env node
'use strict';

global.__started_at = new Date;

let program = require('commander');
let glob = require('glob');
let testsLocation = 'tests/**/*Test.js';
let path = require('path');
let jsdom = require('jsdom-light').jsdom;
let jsunit = {};

program
    .version('1.1.0')
    .arguments('<path>')
    .option('-f, --stop-on-failure', 'Stop execution upon first error or failure.')
    .action((path) => {
        testsLocation = path.endsWith('/') ? `${path}**/*Test.js` : path;
    })
    .parse(process.argv);

new Promise((resolve, reject) => {
    jsunit.filter = testsLocation.split(':')[1];

    glob(testsLocation.split(':')[0], {absolute: true}, (errors, files) => {
        if (errors) {
            return reject(errors);
        }

        return resolve(files);
    });
}).then((files) => {
    jsunit.files = files;
    jsunit.stopOnFailure = program.stopOnFailure;
    global.jsunit = jsunit;
    global.document = jsdom('<html><head></head><body></body></html>');
    global.window = global.document.defaultView;

    const moduleAlias = require('module-alias');

    moduleAlias.addAlias('vue', 'vue/dist/vue.min');

    const hooks = require('require-extension-hooks');
    hooks('vue').plugin('vue').push();
    hooks(['vue', 'js']).plugin('babel').push();

    var Jasmine = require('jasmine');
    var jasmine = new Jasmine();

    jasmine.env.clearReporters();
    jasmine.addReporter(require('../console-reporter.js'));
    jasmine.execute([path.resolve(__dirname, '../start.js')]);

}).catch((failures) => {
    console.log(failures);
})
